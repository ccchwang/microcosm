{"version":3,"sources":["webpack:///component---src-pages-index-js-5fe063847c1428956908.js","webpack:///./src/components/graphic.js","webpack:///./src/data/index.json","webpack:///./src/pages/index.js"],"names":["webpackJsonp","180","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","Graphic","_ref","section","graphicUrl","createElement","id","className","data-module","data-section","src","alt","298","1","heading","microcosmText","browserText","microcosmUrl","browserUrl","2","3","184","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_index","_index2","_graphic","_graphic2","IndexPage","_React$Component","props","this","_this","onIntersection","observed","entry","parseInt","target","dataset","isIntersecting","intersectionRatio","notAlreadyVisible","state","currentSection","changeBgColor","setState","switchView","microcosmView","scroll","e","num","preventDefault","oldLink","newLink","document","getElementsByClassName","classList","remove","add","window","top","getElementById","offsetTop","left","behavior","numSections","componentWillMount","sections","createSectionsArray","componentDidMount","setVars","beginObserve","body","graphics","querySelectorAll","observeOptions","root","rootMargin","threshold","arr","i","push","observer","IntersectionObserver","length","observe","oldSection","newSection","render","_this2","sectionData","text","browserClass","href","onClick","dangerouslySetInnerHTML","__html","map","key","Component"],"mappings":"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","file":"component---src-pages-index-js-5fe063847c1428956908.js","sourcesContent":["webpackJsonp([35783957827783],{\n\n/***/ 180:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(4);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Graphic = function Graphic(_ref) {\n\t  var section = _ref.section,\n\t      graphicUrl = _ref.graphicUrl;\n\t  return _react2.default.createElement(\n\t    \"figure\",\n\t    {\n\t      id: section,\n\t      className: \"section__graphic__figure\",\n\t      \"data-module\": \"ObserveGraphic\",\n\t      \"data-section\": section\n\t    },\n\t    _react2.default.createElement(\"img\", { src: graphicUrl, alt: \"TODO\" })\n\t  );\n\t};\n\t\n\texports.default = Graphic;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 298:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"1\":{\"heading\":\"<span>01.</span> Rendering a View\",\"microcosmText\":\"The <a href='TODO'>Domains</a> are in charge of keeping state organized, and provide whatever data is necessary to the Presenter. A Presenter at its core is a React Component, so it uses the data it pulls from the Domains to render the appropriate view.\",\"browserText\":\"A user fires up the browser to take a quiz.\",\"microcosmUrl\":\"./static/images/v.png\",\"browserUrl\":\"http://via.placeholder.com/400x400\"},\"2\":{\"heading\":\"<span>02.</span> Creating an Action\",\"microcosmText\":\"The <a href='TODO'>Presenter</a> creates a new <a href='TODO'>Action</a> in response to the user's click. This particular Action's job will be to fetch some data from an external API on cats. Cool cats.\",\"browserText\":\"A user selects an option from the quiz list.\",\"microcosmUrl\":\"http://via.placeholder.com/500x500\",\"browserUrl\":\"http://via.placeholder.com/300x300\"},\"3\":{\"heading\":\"<span>03.</span> The Repository\",\"microcosmText\":\"The Repository (typically called the Repo) oversees everything that has to do with actions, history, and state. The Repo knows which domains care about what actions, and also has access to the History of actions. Let's see what that looks like... \",\"browserText\":\"Lorem Ipsum.\",\"microcosmUrl\":\"http://via.placeholder.com/400x400\",\"browserUrl\":\"http://via.placeholder.com/200x200\"}}\n\n/***/ }),\n\n/***/ 184:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(4);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _index = __webpack_require__(298);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tvar _graphic = __webpack_require__(180);\n\t\n\tvar _graphic2 = _interopRequireDefault(_graphic);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar IndexPage = function (_React$Component) {\n\t  _inherits(IndexPage, _React$Component);\n\t\n\t  function IndexPage(props) {\n\t    _classCallCheck(this, IndexPage);\n\t\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\t\n\t    _this.onIntersection = function (observed) {\n\t      var entry = observed[0];\n\t      var section = parseInt(entry.target.dataset.section);\n\t      var isIntersecting = entry.intersectionRatio >= 0.5;\n\t      var notAlreadyVisible = section !== _this.state.currentSection;\n\t\n\t      if (isIntersecting && notAlreadyVisible) {\n\t        _this.changeBgColor(_this.state.currentSection, section);\n\t        _this.setState({ currentSection: section });\n\t      }\n\t    };\n\t\n\t    _this.switchView = function () {\n\t      _this.setState({ microcosmView: !_this.state.microcosmView });\n\t    };\n\t\n\t    _this.scroll = function (e, num) {\n\t      e.preventDefault();\n\t\n\t      _this.oldLink = _this.newLink ? _this.newLink : document.getElementsByClassName('-active')[0];\n\t      _this.newLink = e.target;\n\t\n\t      _this.oldLink.classList.remove('-active');\n\t      _this.newLink.classList.add('-active');\n\t\n\t      window.scroll({\n\t        top: document.getElementById(num).offsetTop - 400,\n\t        left: 0,\n\t        behavior: 'smooth'\n\t      });\n\t    };\n\t\n\t    _this.state = {\n\t      numSections: 3,\n\t      currentSection: 1,\n\t      microcosmView: true\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  IndexPage.prototype.componentWillMount = function componentWillMount() {\n\t    this.sections = this.createSectionsArray();\n\t  };\n\t\n\t  IndexPage.prototype.componentDidMount = function componentDidMount() {\n\t    this.setVars();\n\t    this.beginObserve();\n\t  };\n\t\n\t  IndexPage.prototype.setVars = function setVars() {\n\t    this.body = document.body;\n\t    this.graphics = document.querySelectorAll('[data-module=\"ObserveGraphic\"]');\n\t    this.observeOptions = {\n\t      root: null,\n\t      rootMargin: '0px 0px 0px',\n\t      threshold: 0.5\n\t    };\n\t  };\n\t\n\t  IndexPage.prototype.createSectionsArray = function createSectionsArray() {\n\t    var arr = [];\n\t\n\t    for (var i = 0; i < this.state.numSections; i++) {\n\t      arr.push(i + 1);\n\t    }\n\t\n\t    return arr;\n\t  };\n\t\n\t  IndexPage.prototype.beginObserve = function beginObserve() {\n\t    //create new Observer instance\n\t    var observer = new IntersectionObserver(this.onIntersection, this.observeOptions);\n\t\n\t    //start observing each graphic\n\t    for (var i = 0; i < this.graphics.length; i++) {\n\t      observer.observe(this.graphics[i]);\n\t    }\n\t  };\n\t\n\t  IndexPage.prototype.changeBgColor = function changeBgColor(oldSection, newSection) {\n\t    this.body.classList.remove('bg-color-' + oldSection);\n\t    this.body.classList.add('bg-color-' + newSection);\n\t  };\n\t\n\t  IndexPage.prototype.render = function render() {\n\t    var _this2 = this;\n\t\n\t    var microcosmView = this.state.microcosmView;\n\t    var sectionData = _index2.default[this.state.currentSection];\n\t    var text = microcosmView ? sectionData.microcosmText : sectionData.browserText;\n\t    var browserClass = !microcosmView ? ' -browserView' : '';\n\t\n\t    return _react2.default.createElement(\n\t      'div',\n\t      { className: 'wrapper' },\n\t      _react2.default.createElement(\n\t        'aside',\n\t        { className: 'section-nav' },\n\t        _react2.default.createElement(\n\t          'nav',\n\t          null,\n\t          _react2.default.createElement(\n\t            'ol',\n\t            { className: 'section-nav__list' },\n\t            _react2.default.createElement(\n\t              'li',\n\t              { className: 'section-nav__list__link' },\n\t              _react2.default.createElement(\n\t                'a',\n\t                { href: '#1', className: '-active', onClick: function onClick(e) {\n\t                    _this2.scroll(e, 1);\n\t                  } },\n\t                'Rendering a View'\n\t              )\n\t            ),\n\t            _react2.default.createElement(\n\t              'li',\n\t              { className: 'section-nav__list__link' },\n\t              _react2.default.createElement(\n\t                'a',\n\t                { href: '#2', onClick: function onClick(e) {\n\t                    _this2.scroll(e, 2);\n\t                  } },\n\t                'Creating an Action'\n\t              )\n\t            ),\n\t            _react2.default.createElement(\n\t              'li',\n\t              { className: 'section-nav__list__link' },\n\t              _react2.default.createElement(\n\t                'a',\n\t                { href: '#3', onClick: function onClick(e) {\n\t                    _this2.scroll(e, 3);\n\t                  } },\n\t                'The Repository'\n\t              )\n\t            )\n\t          )\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        'section',\n\t        { className: 'section' },\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'toggle-container -mobile' },\n\t          _react2.default.createElement(\n\t            'h3',\n\t            {\n\t              className: 'section__content__subheading -bottom' + browserClass\n\t            },\n\t            'Meanwhile, in'\n\t          ),\n\t          _react2.default.createElement('button', {\n\t            onClick: this.switchView,\n\t            className: 'section__toggle-btn' + browserClass\n\t          })\n\t        ),\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'section__content' },\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'text-container' },\n\t            _react2.default.createElement('h2', {\n\t              className: 'section__content__heading',\n\t              dangerouslySetInnerHTML: { __html: sectionData.heading }\n\t            }),\n\t            _react2.default.createElement(\n\t              'h3',\n\t              {\n\t                className: 'section__content__subheading -top' + browserClass\n\t              },\n\t              'In'\n\t            ),\n\t            _react2.default.createElement('p', {\n\t              className: 'section__content__text',\n\t              dangerouslySetInnerHTML: { __html: text }\n\t            })\n\t          ),\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'toggle-container -desktop' },\n\t            _react2.default.createElement(\n\t              'h3',\n\t              {\n\t                className: 'section__content__subheading -bottom' + browserClass\n\t              },\n\t              'Meanwhile, in'\n\t            ),\n\t            _react2.default.createElement('button', {\n\t              onClick: this.switchView,\n\t              className: 'section__toggle-btn' + browserClass\n\t            })\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'section__graphic' },\n\t          this.sections.map(function (num) {\n\t            return _react2.default.createElement(_graphic2.default, {\n\t              key: num,\n\t              section: num,\n\t              graphicUrl: microcosmView ? _index2.default[num].microcosmUrl : _index2.default[num].browserUrl\n\t            });\n\t          })\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return IndexPage;\n\t}(_react2.default.Component);\n\t\n\texports.default = IndexPage;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-index-js-5fe063847c1428956908.js","import React from 'react'\n\nconst Graphic = ({ section, graphicUrl }) => (\n  <figure\n    id={section}\n    className=\"section__graphic__figure\"\n    data-module=\"ObserveGraphic\"\n    data-section={section}\n  >\n    <img src={graphicUrl} alt=\"TODO\" />\n  </figure>\n)\n\nexport default Graphic\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/graphic.js","module.exports = {\"1\":{\"heading\":\"<span>01.</span> Rendering a View\",\"microcosmText\":\"The <a href='TODO'>Domains</a> are in charge of keeping state organized, and provide whatever data is necessary to the Presenter. A Presenter at its core is a React Component, so it uses the data it pulls from the Domains to render the appropriate view.\",\"browserText\":\"A user fires up the browser to take a quiz.\",\"microcosmUrl\":\"./static/images/v.png\",\"browserUrl\":\"http://via.placeholder.com/400x400\"},\"2\":{\"heading\":\"<span>02.</span> Creating an Action\",\"microcosmText\":\"The <a href='TODO'>Presenter</a> creates a new <a href='TODO'>Action</a> in response to the user's click. This particular Action's job will be to fetch some data from an external API on cats. Cool cats.\",\"browserText\":\"A user selects an option from the quiz list.\",\"microcosmUrl\":\"http://via.placeholder.com/500x500\",\"browserUrl\":\"http://via.placeholder.com/300x300\"},\"3\":{\"heading\":\"<span>03.</span> The Repository\",\"microcosmText\":\"The Repository (typically called the Repo) oversees everything that has to do with actions, history, and state. The Repo knows which domains care about what actions, and also has access to the History of actions. Let's see what that looks like... \",\"browserText\":\"Lorem Ipsum.\",\"microcosmUrl\":\"http://via.placeholder.com/400x400\",\"browserUrl\":\"http://via.placeholder.com/200x200\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/data/index.json\n// module id = 298\n// module chunks = 35783957827783","import React from 'react'\nimport data from '../data/index.json'\nimport Graphic from '../components/graphic'\n\nexport default class IndexPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      numSections: 3,\n      currentSection: 1,\n      microcosmView: true,\n    }\n  }\n\n  componentWillMount() {\n    this.sections = this.createSectionsArray()\n  }\n\n  componentDidMount() {\n    this.setVars()\n    this.beginObserve()\n  }\n\n  setVars() {\n    this.body = document.body\n    this.graphics = document.querySelectorAll('[data-module=\"ObserveGraphic\"]')\n    this.observeOptions = {\n      root: null,\n      rootMargin: '0px 0px 0px',\n      threshold: 0.5,\n    }\n  }\n\n  createSectionsArray() {\n    let arr = []\n\n    for (let i = 0; i < this.state.numSections; i++) {\n      arr.push(i + 1)\n    }\n\n    return arr\n  }\n\n  beginObserve() {\n    //create new Observer instance\n    let observer = new IntersectionObserver(\n      this.onIntersection,\n      this.observeOptions\n    )\n\n    //start observing each graphic\n    for (let i = 0; i < this.graphics.length; i++) {\n      observer.observe(this.graphics[i])\n    }\n  }\n\n  onIntersection = observed => {\n    let entry = observed[0]\n    let section = parseInt(entry.target.dataset.section)\n    let isIntersecting = entry.intersectionRatio >= 0.5\n    let notAlreadyVisible = section !== this.state.currentSection\n\n    if (isIntersecting && notAlreadyVisible) {\n      this.changeBgColor(this.state.currentSection, section)\n      this.setState({ currentSection: section })\n    }\n  }\n\n  changeBgColor(oldSection, newSection) {\n    this.body.classList.remove(`bg-color-${oldSection}`)\n    this.body.classList.add(`bg-color-${newSection}`)\n  }\n\n  switchView = () => {\n    this.setState({ microcosmView: !this.state.microcosmView })\n  }\n\n  scroll = (e, num) => {\n    e.preventDefault()\n\n    this.oldLink = this.newLink ? this.newLink : document.getElementsByClassName('-active')[0]\n    this.newLink = e.target\n\n    this.oldLink.classList.remove('-active')\n    this.newLink.classList.add('-active')\n\n    window.scroll({\n      top: document.getElementById(num).offsetTop - 400,\n      left: 0,\n      behavior: 'smooth'\n    });\n  }\n\n  render() {\n    let microcosmView = this.state.microcosmView\n    let sectionData = data[this.state.currentSection]\n    let text = microcosmView ? sectionData.microcosmText : sectionData.browserText\n    let browserClass = !microcosmView ? ' -browserView' : ''\n\n    return (\n      <div className=\"wrapper\">\n        <aside className=\"section-nav\">\n          <nav>\n            <ol className=\"section-nav__list\">\n              <li className=\"section-nav__list__link\">\n                <a href=\"#1\" className=\"-active\" onClick={(e) => {this.scroll(e, 1)}}>Rendering a View</a>\n              </li>\n              <li className=\"section-nav__list__link\">\n                <a  href=\"#2\" onClick={(e) => {this.scroll(e, 2)}}>Creating an Action</a>\n              </li>\n              <li className=\"section-nav__list__link\">\n                <a  href=\"#3\" onClick={(e) => {this.scroll(e, 3)}}>The Repository</a>\n              </li>\n            </ol>\n          </nav>\n        </aside>\n        <section className=\"section\">\n          <div className=\"toggle-container -mobile\">\n            <h3\n              className={\n                'section__content__subheading -bottom' + browserClass\n              }\n            >\n              Meanwhile, in\n            </h3>\n            <button\n              onClick={this.switchView}\n              className={'section__toggle-btn' + browserClass}\n            />\n          </div>\n\n          <div className=\"section__content\">\n            <div className=\"text-container\">\n              <h2\n                className=\"section__content__heading\"\n                dangerouslySetInnerHTML={{ __html: sectionData.heading }}\n              />\n              <h3\n                className={'section__content__subheading -top' + browserClass}\n              >\n                In\n              </h3>\n              <p\n                className=\"section__content__text\"\n                dangerouslySetInnerHTML={{ __html: text }}\n              />\n            </div>\n\n            <div className=\"toggle-container -desktop\">\n              <h3\n                className={\n                  'section__content__subheading -bottom' + browserClass\n                }\n              >\n                Meanwhile, in\n              </h3>\n              <button\n                onClick={this.switchView}\n                className={'section__toggle-btn' + browserClass}\n              />\n            </div>\n          </div>\n\n          <div className=\"section__graphic\">\n            {this.sections.map(num => (\n              <Graphic\n                key={num}\n                section={num}\n                graphicUrl={microcosmView ? data[num].microcosmUrl : data[num].browserUrl}\n              />\n            ))}\n          </div>\n        </section>\n      </div>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/index.js"],"sourceRoot":""}